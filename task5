import json
import os
CONTACTS_FILE = 'contacts.json'
def load_contacts():
    """Loads contacts from a JSON file."""
    if os.path.exists(CONTACTS_FILE):
        with open(CONTACTS_FILE, 'r') as file:
            return json.load(file)
    return []
def save_contacts(contacts):
    """Saves contacts to a JSON file."""
    with open(CONTACTS_FILE, 'w') as file:
        json.dump(contacts, file, indent=4)
def add_contact(contacts):
    """Adds a new contact to the list."""
    name = input("Enter contact name: ")
    phone = input("Enter phone number: ")
    email = input("Enter email address: ")
    address = input("Enter address: ")
    new_contact = {
        'name': name,
        'phone': phone,
        'email': email,
        'address': address
    }
    contacts.append(new_contact)
    print(f"Contact '{name}' added successfully.")
    save_contacts(contacts)
def view_contacts(contacts):
    """Displays a list of all contacts."""
    if not contacts:
        print("Your contact list is empty.")
        return
    print("\n--- Contact List ---")
    for i, contact in enumerate(contacts, 1):
        print(f"{i}. Name: {contact['name']}, Phone: {contact['phone']}")
def search_contact(contacts):
    """Searches for a contact by name or phone number."""
    search_term = input("Enter name or phone number to search: ").lower()
    found_contacts = []
    for contact in contacts:
        if search_term in contact['name'].lower() or search_term in contact['phone']:
            found_contacts.append(contact)
    if found_contacts:
        print("\n--- Found Contacts ---")
        for contact in found_contacts:
            print(f"Name: {contact['name']}")
            print(f"Phone: {contact['phone']}")
            print(f"Email: {contact['email']}")
            print(f"Address: {contact['address']}")
            print("-" * 20)
    else:
        print("No contacts found.")
def update_contact(contacts):
    """Updates the details of an existing contact."""
    view_contacts(contacts)
    if not contacts:
        return
    try:
        index = int(input("Enter the number of the contact to update: ")) - 1
        if 0 <= index < len(contacts):
            contact = contacts[index]
            print(f"Updating contact: {contact['name']}")
            contact['name'] = input(f"Enter new name ({contact['name']}): ") or contact['name']
            contact['phone'] = input(f"Enter new phone ({contact['phone']}): ") or contact['phone']
            contact['email'] = input(f"Enter new email ({contact['email']}): ") or contact['email']
            contact['address'] = input(f"Enter new address ({contact['address']}): ") or contact['address']
            save_contacts(contacts)
            print("Contact updated successfully.")
        else:
            print("Invalid contact number.")
    except ValueError:
        print("Invalid input. Please enter a number.")
def delete_contact(contacts):
    """Deletes a contact from the list."""
    view_contacts(contacts)
    if not contacts:
        return
    try:
        index = int(input("Enter the number of the contact to delete: ")) - 1
        if 0 <= index < len(contacts):
            deleted_contact = contacts.pop(index)
            print(f"Contact '{deleted_contact['name']}' deleted successfully.")
            save_contacts(contacts)
        else:
            print("Invalid contact number.")
    except ValueError:
        print("Invalid input. Please enter a number.")
def main():
    """Main function to run the contact book application."""
    contacts = load_contacts()
    while True:
        print("\n--- Contact Book Menu ---")
        print("1. Add a new contact")
        print("2. View all contacts")
        print("3. Search for a contact")
        print("4. Update a contact")
        print("5. Delete a contact")
        print("6. Exit")
        choice = input("Enter your choice: ")
        if choice == '1':
            add_contact(contacts)
        elif choice == '2':
            view_contacts(contacts)
        elif choice == '3':
            search_contact(contacts)
        elif choice == '4':
            update_contact(contacts)
        elif choice == '5':
            delete_contact(contacts)
        elif choice == '6':
            print("Goodbye!ðŸ‘‹")
            break
        else:
            print("Invalid choice. Please try again.")
if __name__ == "__main__":
    main()